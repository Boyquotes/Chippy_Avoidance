[gd_scene load_steps=10 format=2]

[ext_resource path="res://Resources/Fonts/small_outline_font.tres" type="DynamicFont" id=1]
[ext_resource path="res://Scenes/FPSCounter.gd" type="Script" id=2]
[ext_resource path="res://Scenes/Godmode.gd" type="Script" id=3]
[ext_resource path="res://Scenes/DebugLabel.gd" type="Script" id=4]
[ext_resource path="res://Scenes/AlwaysRendered.gd" type="Script" id=5]

[sub_resource type="Shader" id=5]
code = "shader_type canvas_item;
uniform float update_interval = .04;
uniform float static_granularity = .001;
uniform float noise_alpha = .025;


float generate_random_static (in float size, in float interval, in vec2 uv){
	float time_step = TIME - mod(TIME,interval);
	vec2 uv_step = uv - mod(uv, size);
	return fract(sin(dot(uv_step,vec2(12.0278*sin(time_step),15.0905)))*43758.5453);
}

void fragment() {
	vec3 static_plot = vec3(generate_random_static(static_granularity,update_interval,UV));
	COLOR = vec4(static_plot, noise_alpha);
}"

[sub_resource type="ShaderMaterial" id=6]
shader = SubResource( 5 )
shader_param/update_interval = 0.04
shader_param/static_granularity = 0.001
shader_param/noise_alpha = 0.025

[sub_resource type="Shader" id=3]
code = "shader_type canvas_item;

uniform float vignette_intensity = 0.4;
uniform float vignette_opacity : hint_range(0.0, 1.0) = 0.5;
uniform vec4 vignette_rgb : hint_color = vec4(0.0, 0.0, 0.0, 1.0);

float vignette(vec2 uv){
	uv *= 1.0 - uv.xy;
	float vignette = uv.x * uv.y * 15.0;
	return pow(vignette, vignette_intensity * vignette_opacity);
}

void fragment(){
	vec4 color = texture(SCREEN_TEXTURE, SCREEN_UV);
	vec4 text = texture(TEXTURE, UV);
	
	text.rgba *= (vignette_rgb.rgba);
	text.rgba *= (1.0 - vignette(UV));
	
	COLOR = vec4((text.rgb)*color.rgb,text.a);
}"

[sub_resource type="ShaderMaterial" id=4]
shader = SubResource( 3 )
shader_param/vignette_intensity = 0.171
shader_param/vignette_opacity = 0.584
shader_param/vignette_rgb = Color( 0, 0, 0, 1 )

[node name="AlwaysRendered" type="CanvasLayer"]
layer = 100
script = ExtResource( 5 )

[node name="FX" type="Control" parent="."]
margin_right = 40.0
margin_bottom = 40.0

[node name="Static" type="ColorRect" parent="."]
material = SubResource( 6 )
anchor_right = 1.0
anchor_bottom = 1.0
mouse_filter = 2

[node name="Vignette" type="ColorRect" parent="."]
material = SubResource( 4 )
anchor_right = 1.0
anchor_bottom = 1.0
mouse_filter = 2

[node name="DEBUG" type="MarginContainer" parent="."]
anchor_left = 1.0
anchor_right = 1.0
margin_left = -126.0
margin_bottom = 40.0
grow_horizontal = 0
custom_constants/margin_right = 8

[node name="HBoxContainer" type="HBoxContainer" parent="DEBUG"]
margin_right = 226.0
margin_bottom = 40.0
custom_constants/separation = 8

[node name="Debug" type="Label" parent="DEBUG/HBoxContainer"]
margin_top = 14.0
margin_right = 57.0
margin_bottom = 26.0
custom_colors/font_color = Color( 1, 0.290196, 0.423529, 1 )
custom_fonts/font = ExtResource( 1 )
text = "Debug"
align = 2
valign = 1
script = ExtResource( 4 )

[node name="Godmode" type="Label" parent="DEBUG/HBoxContainer"]
margin_left = 65.0
margin_top = 14.0
margin_right = 157.0
margin_bottom = 26.0
custom_colors/font_color = Color( 0.235294, 0.819608, 1, 1 )
custom_fonts/font = ExtResource( 1 )
text = "God-mode"
align = 2
valign = 1
script = ExtResource( 3 )

[node name="FPSCounter" type="Label" parent="DEBUG/HBoxContainer"]
margin_left = 165.0
margin_top = 14.0
margin_right = 226.0
margin_bottom = 26.0
custom_fonts/font = ExtResource( 1 )
text = "100fps"
align = 2
valign = 1
script = ExtResource( 2 )
