[gd_scene load_steps=9 format=2]

[ext_resource path="res://Assets/rewind_icon.png" type="Texture" id=1]
[ext_resource path="res://Scenes/RewindEffect.gd" type="Script" id=2]

[sub_resource type="Shader" id=9]
code = "shader_type canvas_item;

uniform sampler2D noise_texture: hint_albedo;


float noise(vec2 p)
{
	float s = texture(noise_texture, vec2(1.,2.*cos(TIME))*TIME*8. + p*1.).x;
	s *= s;
	return s;
}

float onOff(float a, float b, float c)
{
	return step(c, sin(TIME + a*cos(TIME*b)));
}

float ramp(float y, float start, float end)
{
	float inside = step(start,y) - step(end,y);
	float fact = (y-start)/(end-start)*inside;
	return (1.-fact) * inside;
	
}

float stripes(vec2 uv)
{
	float noi = noise(uv*vec2(0.5,1.) + vec2(1.,3.));
	return ramp(mod(uv.y*4. + TIME/2.+sin(TIME + sin(TIME*0.63)),1.),0.5,0.6)*noi;
}

vec4 getfinal_col(sampler2D tex, vec2 uv)
{
	vec2 look = uv;
	float window = 1./(1.+20.*(look.y-mod(TIME/4.,1.))*(look.y-mod(TIME/4.,1.)));
	look.x = look.x + sin(look.y*10. + TIME)/50.*onOff(4.,4.,.3)*(1.+cos(TIME*80.))*window;
	
	vec4 final_col = texture(tex, look);
	return final_col;
}

vec2 screenDistort(vec2 uv)
{
	uv -= vec2(.5,.5);
	uv = uv*1.2*(1./1.2+2.*uv.x*uv.x*uv.y*uv.y);
	uv += vec2(.5,.5);
	return uv;
}

void fragment()
{
	vec2 uv = screenDistort(SCREEN_UV);
	vec4 final_col = getfinal_col(SCREEN_TEXTURE, uv);
	float vigAmt = 3.+.3*sin(TIME + 5.*cos(TIME*5.));
	float vignette = (1.-vigAmt*(uv.y-.5)*(uv.y-.5))*(1.-vigAmt*(uv.x-.5)*(uv.x-.5));
	
	final_col += stripes(uv);
	final_col += noise(uv*2.)/2.;
	final_col *= vignette;
	final_col *= (12.+mod(uv.y*30.+TIME,1.))/13.;
	
	COLOR = final_col;
}"

[sub_resource type="OpenSimplexNoise" id=10]
period = 0.1

[sub_resource type="NoiseTexture" id=11]
noise = SubResource( 10 )

[sub_resource type="ShaderMaterial" id=12]
shader = SubResource( 9 )
shader_param/noise_texture = SubResource( 11 )

[sub_resource type="Animation" id=13]
length = 0.001
tracks/0/type = "value"
tracks/0/path = NodePath(".:modulate")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ Color( 1, 1, 1, 0 ) ]
}
tracks/1/type = "value"
tracks/1/path = NodePath("Fade:modulate")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ Color( 1, 1, 1, 0 ) ]
}

[sub_resource type="Animation" id=14]
resource_name = "start"
length = 1.7
tracks/0/type = "value"
tracks/0/path = NodePath(".:modulate")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.3, 1.2, 1.7 ),
"transitions": PoolRealArray( 1, 1, 1, 1 ),
"update": 0,
"values": [ Color( 1, 1, 1, 0 ), Color( 1, 1, 1, 1 ), Color( 1, 1, 1, 1 ), Color( 1, 1, 1, 0 ) ]
}
tracks/1/type = "value"
tracks/1/path = NodePath("Fade:modulate")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0, 0.5, 1 ),
"transitions": PoolRealArray( 1, 2, 1 ),
"update": 0,
"values": [ Color( 1, 1, 1, 0 ), Color( 1, 1, 1, 0 ), Color( 1, 1, 1, 1 ) ]
}
tracks/2/type = "method"
tracks/2/path = NodePath(".")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/keys = {
"times": PoolRealArray( 1 ),
"transitions": PoolRealArray( 1 ),
"values": [ {
"args": [  ],
"method": "_faded_in"
} ]
}

[node name="RewindEffect" type="ColorRect"]
modulate = Color( 1, 1, 1, 0 )
material = SubResource( 12 )
anchor_right = 1.0
anchor_bottom = 1.0
mouse_filter = 2
script = ExtResource( 2 )

[node name="RewindIcon" type="TextureRect" parent="."]
modulate = Color( 1, 1, 1, 0.666667 )
anchor_left = 0.5
anchor_top = 0.5
anchor_right = 0.5
anchor_bottom = 0.5
margin_left = -256.0
margin_top = -256.0
margin_right = 256.0
margin_bottom = 256.0
mouse_filter = 2
texture = ExtResource( 1 )

[node name="Fade" type="ColorRect" parent="."]
modulate = Color( 1, 1, 1, 0 )
show_behind_parent = true
anchor_right = 1.0
anchor_bottom = 1.0
color = Color( 0, 0, 0, 1 )

[node name="AnimationPlayer" type="AnimationPlayer" parent="."]
autoplay = "start"
anims/RESET = SubResource( 13 )
anims/start = SubResource( 14 )

[connection signal="animation_finished" from="AnimationPlayer" to="." method="_on_AnimationPlayer_animation_finished"]
